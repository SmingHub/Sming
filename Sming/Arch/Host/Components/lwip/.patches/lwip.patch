diff --git a/contrib/ports/unix/port/sys_arch.c b/contrib/ports/unix/port/sys_arch.c
index a56d7de1..6fc9f434 100644
--- a/contrib/ports/unix/port/sys_arch.c
+++ b/contrib/ports/unix/port/sys_arch.c
@@ -68,10 +68,12 @@
 #include "lwip/stats.h"
 #include "lwip/tcpip.h"
 
+extern u32_t os_random(void);
+
 u32_t
 lwip_port_rand(void)
 {
-  return (u32_t)rand();
+  return os_random();
 }
 
 static void
@@ -730,13 +732,3 @@ sys_arch_unprotect(sys_prot_t pval)
 }
 #endif /* SYS_LIGHTWEIGHT_PROT */
 
-/* get keyboard state to terminate the debug app by using select */
-int
-lwip_unix_keypressed(void)
-{
-  struct timeval tv = { 0L, 0L };
-  fd_set fds;
-  FD_ZERO(&fds);
-  FD_SET(0, &fds);
-  return select(1, &fds, NULL, NULL, &tv);
-}
diff --git a/contrib/ports/CMakeCommon.cmake b/contrib/ports/CMakeCommon.cmake
index fccf0f31..0a6378c4 100644
--- a/contrib/ports/CMakeCommon.cmake
+++ b/contrib/ports/CMakeCommon.cmake
@@ -65,25 +65,12 @@ set(LWIP_COMPILER_FLAGS_GNU_CLANG
     -Wlogical-not-parentheses
 )
 
-if (NOT LWIP_HAVE_MBEDTLS)
-    list(APPEND LWIP_COMPILER_FLAGS_GNU_CLANG
-        -Wredundant-decls
-        $<$<COMPILE_LANGUAGE:C>:-Wc++-compat>
-    )
-endif()
-
 if(CMAKE_C_COMPILER_ID STREQUAL "GNU")
     list(APPEND LWIP_COMPILER_FLAGS_GNU_CLANG
         -Wlogical-op
         -Wtrampolines
     )
 
-    if (NOT LWIP_HAVE_MBEDTLS)
-        list(APPEND LWIP_COMPILER_FLAGS_GNU_CLANG
-            $<$<COMPILE_LANGUAGE:C>:-Wc90-c99-compat>
-        )
-    endif()
-
     if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.9)
         if(LWIP_USE_SANITIZERS)
             list(APPEND LWIP_COMPILER_FLAGS_GNU_CLANG
diff --git a/contrib/ports/win32/sys_arch.c b/contrib/ports/win32/sys_arch.c
index 84c1bcaf..f23dfa67 100644
--- a/contrib/ports/win32/sys_arch.c
+++ b/contrib/ports/win32/sys_arch.c
@@ -38,6 +38,7 @@
 #pragma warning (push, 3)
 #endif
 #include <windows.h>
+#include <wincrypt.h>
 #ifdef _MSC_VER
 #pragma warning (pop)
 #endif
@@ -732,28 +733,6 @@ sys_arch_netconn_sem_free(void)
 
 #endif /* !NO_SYS */
 
-/* get keyboard state to terminate the debug app on any kbhit event using win32 API */
-int
-lwip_win32_keypressed(void)
-{
-  INPUT_RECORD rec;
-  DWORD num = 0;
-  HANDLE h = GetStdHandle(STD_INPUT_HANDLE);
-  BOOL ret = PeekConsoleInput(h, &rec, 1, &num);
-  if (ret && num) {
-    ReadConsoleInput(h, &rec, 1, &num);
-    if (rec.EventType == KEY_EVENT) {
-      if (rec.Event.KeyEvent.bKeyDown) {
-        /* not a special key? */
-        if (rec.Event.KeyEvent.uChar.AsciiChar != 0) {
-          return 1;
-        }
-      }
-    }
-  }
-  return 0;
-}
-
 #include <stdarg.h>
 
 /* This is an example implementation for LWIP_PLATFORM_DIAG:

diff --git a/contrib/ports/win32/pcapif.c b/contrib/ports/win32/pcapif.c
index 36356ca5..895f2a2d 100644
--- a/contrib/ports/win32/pcapif.c
+++ b/contrib/ports/win32/pcapif.c
@@ -40,16 +40,7 @@
 #include <stdlib.h>
 #include <stdio.h>
 
-#ifdef _MSC_VER
-#pragma warning( push, 3 )
 #include "pcap.h"
-#pragma warning ( pop )
-#else
-/* e.g. mingw */
-#define _MSC_VER 1500
-#include "pcap.h"
-#undef _MSC_VER
-#endif
 
 #include "lwip/opt.h"
 
@@ -477,7 +468,6 @@ pcap_reopen_adapter(struct pcapif_private *pa)
 static struct pcapif_private*
 pcapif_init_adapter(int adapter_num, void *arg)
 {
-  int i;
   int number_of_adapters;
   struct pcapif_private *pa;
   char errbuf[PCAP_ERRBUF_SIZE+1];
@@ -539,6 +529,7 @@ pcapif_init_adapter(int adapter_num, void *arg)
   }
 
 #ifndef PCAPIF_LIB_QUIET
+  int i;
   /* Scan the list printing every entry */
   for (d = alldevs, i = 0; d != NULL; d = d->next, i++) {
     char *desc = d->description;

diff --git a/Makefile.sming b/Makefile.sming
index 842f4fe..31e4b62 100644
--- a/Makefile.sming
+++ b/Makefile.sming
@@ -4,12 +4,15 @@
 USER_LIBDIR ?= tweaked-
 LWIP_LIB_RELEASE=$(USER_LIBDIR)liblwip2.a
 LWIP_INCLUDES_RELEASE=include
+SDK_BASE ?= $(ESP_HOME)/sdk
+SDK_INTERNAL ?= 0
 
 all: install
 
 %:
 	@make -f makefiles/Makefile.build-lwip2 \
-			SDK=$(ESP_HOME)/sdk \
+			SDK=$(SDK_BASE) \
+			SDK_INTERNAL=$(SDK_INTERNAL) \
 			LWIP_LIB=liblwip2.a \
 			LWIP_LIB_RELEASE=$(LWIP_LIB_RELEASE) \
 			LWIP_INCLUDES_RELEASE=$(LWIP_INCLUDES_RELEASE) \
diff --git a/glue-esp/include-esp/arch/cc.h b/glue-esp/include-esp/arch/cc.h
index 735e700..47413e5 100644
--- a/glue-esp/include-esp/arch/cc.h
+++ b/glue-esp/include-esp/arch/cc.h
@@ -59,6 +59,7 @@ typedef signed     short   s16_t;
 typedef unsigned   long    u32_t;
 typedef signed     long    s32_t;
 typedef unsigned long   mem_ptr_t;
+typedef signed short        sint16_t;
 
 #define S16_F "d"
 #define U16_F "d"
diff --git a/glue-lwip/arch/cc.h b/glue-lwip/arch/cc.h
index 63cd72d..5f100eb 100644
--- a/glue-lwip/arch/cc.h
+++ b/glue-lwip/arch/cc.h
@@ -34,6 +34,8 @@ author: d. gauchard
 
 #include "stdint.h"
 
+typedef signed short        sint16_t;
+
 #ifdef LWIP_BUILD
 
 // define LWIP_BUILD only when building LWIP
diff --git a/glue/esp-missing.h b/glue/esp-missing.h
index 0e42073..2846506 100644
--- a/glue/esp-missing.h
+++ b/glue/esp-missing.h
@@ -9,9 +9,13 @@
 
 uint32_t r_rand (void);
 
-void* pvPortZalloc (size_t, const char*, int);
-void* pvPortMalloc (size_t xWantedSize, const char* file, int line) __attribute__((malloc, alloc_size(1)));
-void vPortFree (void *ptr, const char* file, int line);
+#if !SDK_INTERNAL
+
+void* pvPortZalloc (size_t, const char*, unsigned line);
+void* pvPortMalloc (size_t xWantedSize, const char* file, unsigned line) __attribute__((malloc, alloc_size(1)));
+void vPortFree (void *ptr, const char* file, unsigned line);
+
+#endif
 
 struct netif* eagle_lwip_getif (int netif_index);
 
@@ -27,10 +31,10 @@ int ets_memcmp (const void*, const void*, size_t n);
 void *ets_memset (void *s, int c, size_t n);
 void *ets_memcpy (void *dest, const void *src, size_t n);
 
-typedef void ETSTimerFunc(void *timer_arg);
-void ets_timer_disarm (ETSTimer *a);
-void ets_timer_arm_new (ETSTimer *a, int b, int c, int isMstimer);
-void ets_timer_setfn (ETSTimer *t, ETSTimerFunc *fn, void *parg);
+//typedef void ETSTimerFunc(void *timer_arg);
+//void ets_timer_disarm (ETSTimer *a);
+//void ets_timer_arm_new (ETSTimer *a, int b, int c, int isMstimer);
+//void ets_timer_setfn (ETSTimer *t, ETSTimerFunc *fn, void *parg);
 
 struct ip_addr;
 void wifi_softap_set_station_info (uint8_t* mac, struct ip_addr*);
diff --git a/makefiles/Makefile.build-lwip2 b/makefiles/Makefile.build-lwip2
index 928bb63..ccdbca7 100644
--- a/makefiles/Makefile.build-lwip2
+++ b/makefiles/Makefile.build-lwip2
@@ -14,24 +14,25 @@ IRAM	+= sys_timeout_LWIP2
 IRAM	+= sntp_time_inc sntp_get_current_timestamp
 ####################################
 
+LWIP_LIB_BUILD = $(BUILD)/$(LWIP_LIB)
+
 all: $(LWIP_LIB_RELEASE)
 
-$(LWIP_LIB_RELEASE): $(LWIP_LIB)
+$(LWIP_LIB_RELEASE): $(LWIP_LIB_BUILD)
 	@# according to eagle.app.v6.common.ld:
 	@# putting symbols into .gnu.linkonce.literal.* instead of (default:).text.*
 	@# will eventually move them in iram: section .text.* instead of .irom0.text.*
 	@# check this with xtensa-lx106-elf-objdump -t <elfresult> | grep <symbol>
-	@( [ ! -r $(LWIP_LIB_RELEASE) ] || [ $(LWIP_LIB) -nt $(LWIP_LIB_RELEASE) ] ) && cp $(LWIP_LIB) $(LWIP_LIB_RELEASE) && for i in $(IRAM); do \
+	@( [ ! -r $@ ] || [ $< -nt $@ ] ) && cp $< $@ && for i in $(IRAM); do \
 		echo "---- moving $$i in IRAM"; \
-		$(OC) --rename-section .text.$$i=.gnu.linkonce.literal.$$i $(LWIP_LIB_RELEASE); \
+		$(OC) --rename-section .text.$$i=.gnu.linkonce.literal.$$i $@; \
 		true; \
 	done || true
 
-.PHONY: $(LWIP_LIB)
-$(LWIP_LIB):
-	make -f makefiles/Makefile.glue-esp
-	make -f makefiles/Makefile.glue
-	make -C lwip2-src/src -f ../../makefiles/Makefile.lwip2 BUILD=../../$(BUILD) LWIP_LIB=../../$(LWIP_LIB)
+$(LWIP_LIB_BUILD):
+	make -f makefiles/Makefile.glue-esp SDK_INTERNAL=$(SDK_INTERNAL) LWIP_LIB=$@
+	make -f makefiles/Makefile.glue SDK_INTERNAL=$(SDK_INTERNAL) LWIP_LIB=$@
+	make -C lwip2-src/src -f ../../makefiles/Makefile.lwip2 LWIP_LIB=$@ SDK_INTERNAL=$(SDK_INTERNAL)
 
 section-show:
 	@for i in $(IRAM); do \
@@ -53,4 +54,4 @@ install: $(LWIP_LIB_RELEASE)
 	touch $(LWIP_INCLUDES_RELEASE)/espconn.h
 
 clean:
-	rm -rf build $(LWIP_LIB)
+	rm -rf $(BUILD)
diff --git a/makefiles/Makefile.defs b/makefiles/Makefile.defs
index 7ab4f87..025a23c 100644
--- a/makefiles/Makefile.defs
+++ b/makefiles/Makefile.defs
@@ -4,7 +4,9 @@ AR			= $(TOOLS)ar
 OC			= $(TOOLS)objcopy
 OD			= $(TOOLS)objdump
 
-BUILD			= build
+SDK_INTERNAL ?= 0
+
+BUILD			?= build
 BUILD_FLAGS = -Wall -Wextra -std=c99 -c -Os -g -Wpointer-arith -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -std=gnu99 -ffunction-sections -fdata-sections
-BUILD_DEFINES = -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ -DLWIP_OPEN_SRC -DLWIP_BUILD -DUSE_OPTIMIZE_PRINTF
+BUILD_DEFINES = -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ -DLWIP_OPEN_SRC -DLWIP_BUILD -DUSE_OPTIMIZE_PRINTF -DSDK_INTERNAL=$(SDK_INTERNAL)
 

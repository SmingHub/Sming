diff --git a/component.mk b/component.mk
index 7f92e46..910e866 100644
--- a/component.mk
+++ b/component.mk
@@ -27,6 +27,10 @@ CFG_TUSB_MCU := OPT_MCU_NONE
 GLOBAL_CFLAGS += -DTUP_DCD_ENDPOINT_MAX=16
 endif
 
+
+COMPONENT_VARS += ENABLE_CMD_EXECUTOR
+ENABLE_CMD_EXECUTOR ?= 1
+
 COMPONENT_VARS += USB_DEBUG_LEVEL
 USB_DEBUG_LEVEL ?= 0
 
diff --git a/samples/Basic_Device/app/application.cpp b/samples/Basic_Device/app/application.cpp
index c294b25..81ec7bf 100644
--- a/samples/Basic_Device/app/application.cpp
+++ b/samples/Basic_Device/app/application.cpp
@@ -231,7 +231,9 @@ void init()
 	timer.initializeMs<3000>(InterruptCallback([]() {
 		debug_i("Alive");
 		// Un-comment this to demonstrated how to send keystrokes to the connected PC!
-		// sendText();
+#if CFG_TUD_HID
+		sendText();
+#endif
 	}));
 	timer.start();
 }
diff --git a/src/USB/CDC/UsbSerial.cpp b/src/USB/CDC/UsbSerial.cpp
index b163726..29a27d6 100644
--- a/src/USB/CDC/UsbSerial.cpp
+++ b/src/USB/CDC/UsbSerial.cpp
@@ -24,10 +24,6 @@
 #include "Platform/System.h"
 #include <SimpleTimer.h>
 
-#if ENABLE_CMD_EXECUTOR
-#include <Services/CommandProcessing/CommandExecutor.h>
-#endif
-
 namespace USB::CDC
 {
 UsbSerial::UsbSerial()
@@ -72,10 +68,10 @@ void UsbSerial::processEvents()
 			receiveCallback(*this, peek(), available());
 		}
 #if ENABLE_CMD_EXECUTOR
-		if(commandExecutor) {
+		if(commandHandler) {
 			uint8_t ch;
 			while(readBytes(&ch, 1)) {
-				commandExecutor->executorReceive(ch);
+				commandHandler->process(ch);
 			}
 		}
 #endif
@@ -114,11 +110,11 @@ void UsbSerial::commandProcessing(bool reqEnable)
 {
 #if ENABLE_CMD_EXECUTOR
 	if(reqEnable) {
-		if(!commandExecutor) {
-			commandExecutor.reset(new CommandExecutor(this));
+		if(commandHandler) {
+			CommandProcessing::enable(commandHandler, *this);
 		}
 	} else {
-		commandExecutor.reset();
+		commandHandler = nullptr;
 	}
 #endif
 }
diff --git a/src/USB/CDC/UsbSerial.h b/src/USB/CDC/UsbSerial.h
index daa3616..45f0216 100644
--- a/src/USB/CDC/UsbSerial.h
+++ b/src/USB/CDC/UsbSerial.h
@@ -24,6 +24,10 @@
 #include <Data/BitSet.h>
 #include <memory>
 
+#if ENABLE_CMD_EXECUTOR
+#include <CommandProcessing/Utils.h>
+#endif
+
 namespace USB::CDC
 {
 enum class Event {
@@ -44,7 +48,14 @@ public:
 	using TransmitComplete = Delegate<void(UsbSerial& device)>;
 
 	UsbSerial();
-	~UsbSerial();
+
+#if ENABLE_CMD_EXECUTOR
+	UsbSerial(CommandProcessing::CommandHandler& commandHandler): commandHandler(&commandHandler)
+	{
+	}
+#endif
+
+	virtual ~UsbSerial();
 
 	/**
 	 * @brief Sets receiving buffer size
@@ -131,7 +142,9 @@ private:
 
 	DataReceived receiveCallback;
 	TransmitComplete transmitCompleteCallback;
-	std::unique_ptr<CommandExecutor> commandExecutor;
+#if ENABLE_CMD_EXECUTOR
+	CommandProcessing::CommandHandler* commandHandler{nullptr};
+#endif
 	uint16_t status{0};
 	BitSet<uint8_t, Event> eventMask;
 };

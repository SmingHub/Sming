diff --git a/NexConfig.h b/NexConfig.h
index aa095d3..f06394f 100644
--- a/NexConfig.h
+++ b/NexConfig.h
@@ -24,7 +24,7 @@
  * Define DEBUG_SERIAL_ENABLE to enable debug serial. 
  * Comment it to disable debug serial. 
  */
-#define DEBUG_SERIAL_ENABLE
+//#define DEBUG_SERIAL_ENABLE
 
 /**
  * Define dbSerial for the output of debug messages. 
@@ -34,7 +34,9 @@
 /**
  * Define nexSerial for communicate with Nextion touch panel. 
  */
-#define nexSerial Serial2
+#define nexSerial Serial
+
+#define utoa itoa
 
 
 #ifdef DEBUG_SERIAL_ENABLE
diff --git a/NexUpload.cpp b/NexUpload.cpp
deleted file mode 100644
index ff85eb9..00000000
--- a/NexUpload.cpp
+++ /dev/null
@@ -1,240 +0,0 @@
-/**
- * @file NexUpload.cpp
- *
- * The implementation of download tft file for nextion. 
- *
- * @author  Chen Zengpeng (email:<zengpeng.chen@itead.cc>)
- * @date    2016/3/29
- * @copyright 
- * Copyright (C) 2014-2015 ITEAD Intelligent Systems Co., Ltd. \n
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License as
- * published by the Free Software Foundation; either version 2 of
- * the License, or (at your option) any later version.
- */
-
-#include "NexUpload.h"
-#include <SoftwareSerial.h>
-
-//#define USE_SOFTWARE_SERIAL
-#ifdef USE_SOFTWARE_SERIAL
-SoftwareSerial dbSerial(3, 2); /* RX:D3, TX:D2 */
-#define DEBUG_SERIAL_ENABLE
-#endif
-
-#ifdef DEBUG_SERIAL_ENABLE
-#define dbSerialPrint(a)    dbSerial.print(a)
-#define dbSerialPrintln(a)  dbSerial.println(a)
-#define dbSerialBegin(a)    dbSerial.begin(a)
-#else
-#define dbSerialPrint(a)    do{}while(0)
-#define dbSerialPrintln(a)  do{}while(0)
-#define dbSerialBegin(a)    do{}while(0)
-#endif
-
-NexUpload::NexUpload(const char *file_name,const uint8_t SD_chip_select,uint32_t download_baudrate)
-{
-    _file_name = file_name; 
-    _SD_chip_select = SD_chip_select;
-    _download_baudrate = download_baudrate;
-}
-
-NexUpload::NexUpload(const String file_Name,const uint8_t SD_chip_select,uint32_t download_baudrate)
-{
-    NexUpload(file_Name.c_str(),SD_chip_select,download_baudrate);
-}
-
-void NexUpload::upload(void)
-{
-    dbSerialBegin(9600);
-    if(!_checkFile())
-    {
-        dbSerialPrintln("the file is error");
-        return;
-    }
-    if(_getBaudrate() == 0)
-    {
-        dbSerialPrintln("get baudrate error");
-        return;
-    }
-    if(!_setDownloadBaudrate(_download_baudrate))
-    {
-        dbSerialPrintln("modify baudrate error");
-        return;
-    }
-    if(!_downloadTftFile())
-    {
-        dbSerialPrintln("download file error");
-        return;
-    }
-    dbSerialPrintln("download ok\r\n");
-}
-
-uint16_t NexUpload::_getBaudrate(void)
-{
-    uint32_t baudrate_array[7] = {115200,19200,9600,57600,38400,4800,2400};
-    for(uint8_t i = 0; i < 7; i++)
-    {
-        if(_searchBaudrate(baudrate_array[i]))
-        {
-            _baudrate = baudrate_array[i];
-            dbSerialPrintln("get baudrate");
-            break;
-        }
-    }
-    return _baudrate;
-}
-
-bool NexUpload::_checkFile(void)
-{
-    dbSerialPrintln("start _checkFile");
-    if(!SD.begin(_SD_chip_select))
-    {
-        dbSerialPrintln("init sd failed");
-        return 0;
-    }
-    if(!SD.exists(_file_name))
-    {
-        dbSerialPrintln("file is not exit");
-    }
-   _myFile = SD.open(_file_name);
-    _undownloadByte = _myFile.size();
-    dbSerialPrintln("tft file size is:");
-    dbSerialPrintln(_undownloadByte);
-    dbSerialPrintln("check file ok");
-    return 1;
-}
-
-bool NexUpload::_searchBaudrate(uint32_t baudrate)
-{
-    String string = String("");  
-    nexSerial.begin(baudrate);
-    this->sendCommand("");
-    this->sendCommand("connect");
-    this->recvRetString(string);  
-    if(string.indexOf("comok") != -1)
-    {
-        return 1;
-    } 
-    return 0;
-}
-
-void NexUpload::sendCommand(const char* cmd)
-{
-
-    while (nexSerial.available())
-    {
-        nexSerial.read();
-    }
-
-    nexSerial.print(cmd);
-    nexSerial.write(0xFF);
-    nexSerial.write(0xFF);
-    nexSerial.write(0xFF);
-}
-
-uint16_t NexUpload::recvRetString(String &string, uint32_t timeout,bool recv_flag)
-{
-    uint16_t ret = 0;
-    uint8_t c = 0;
-    long start;
-    bool exit_flag = false;
-    start = millis();
-    while (millis() - start <= timeout)
-    {
-        while (nexSerial.available())
-        {
-            c = nexSerial.read(); 
-            if(c == 0)
-            {
-                continue;
-            }
-            string += (char)c;
-            if(recv_flag)
-            {
-                if(string.indexOf(0x05) != -1)
-                { 
-                    exit_flag = true;
-                } 
-            }
-        }
-        if(exit_flag)
-        {
-            break;
-        }
-    }
-    ret = string.length();
-    return ret;
-}
-
-bool NexUpload::_setDownloadBaudrate(uint32_t baudrate)
-{
-    String string = String(""); 
-    String cmd = String("");
-    
-    String filesize_str = String(_undownloadByte,10);
-    String baudrate_str = String(baudrate,10);
-    cmd = "whmi-wri " + filesize_str + "," + baudrate_str + ",0";
-    
-    dbSerialPrintln(cmd);
-    this->sendCommand("");
-    this->sendCommand(cmd.c_str());
-    delay(50);
-    nexSerial.begin(baudrate);
-    this->recvRetString(string,500);  
-    if(string.indexOf(0x05) != -1)
-    { 
-        return 1;
-    } 
-    return 0;
-}
-
-bool NexUpload::_downloadTftFile(void)
-{
-    uint8_t c;
-    uint16_t send_timer = 0;
-    uint16_t last_send_num = 0;
-    String string = String("");
-    send_timer = _undownloadByte / 4096 + 1;
-    last_send_num = _undownloadByte % 4096;
-
-    while(send_timer)
-    {
-
-        if(send_timer == 1)
-        {
-            for(uint16_t j = 1; j <= 4096; j++)
-            {
-                if(j <= last_send_num)
-                {
-                    c = _myFile.read();
-                    nexSerial.write(c);
-                }
-                else
-                {
-                    break;
-                }
-            }
-        }
-
-        else
-        {
-            for(uint16_t i = 1; i <= 4096; i++)
-            {
-                c = _myFile.read();
-                nexSerial.write(c);
-            }
-        }
-        this->recvRetString(string,500,true);  
-        if(string.indexOf(0x05) != -1)
-        { 
-            string = "";
-        } 
-        else
-        {
-            return 0;
-        }
-         --send_timer;
-    }  
-}
-
diff --git a/NexUpload.h b/NexUpload.h
deleted file mode 100755
index 7129128..00000000
--- a/NexUpload.h
+++ /dev/null
@@ -1,142 +0,0 @@
-/**
- * @file NexUpload.h
- *
- * The definition of class NexUpload. 
- *
- * @author Chen Zengpeng (email:<zengpeng.chen@itead.cc>)
- * @date 2016/3/29
- *
- * @copyright 
- * Copyright (C) 2014-2015 ITEAD Intelligent Systems Co., Ltd. \n
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License as
- * published by the Free Software Foundation; either version 2 of
- * the License, or (at your option) any later version.
- */
-#ifndef __NEXUPLOAD_H__
-#define __NEXUPLOAD_H__
-#include <Arduino.h>
-#include <SPI.h>
-#include <SD.h>
-#include "NexHardware.h"
-
-/**
- * @addtogroup CoreAPI 
- * @{ 
- */
-
-/**
- *
- * Provides the API for nextion to download the ftf file.
- */
-class NexUpload
-{
-public: /* methods */
-
-    /**
-     * Constructor. 
-     * 
-     * @param file_name - tft file name. 
-     * @param SD_chip_select - sd chip select pin.
-     * @param download_baudrate - set download baudrate.
-     */
-    NexUpload(const char *file_name,const uint8_t SD_chip_select,uint32_t download_baudrate);
-    
-    /**
-     * Constructor. 
-     * 
-     * @param file_Name - tft file name. 
-     * @param SD_chip_select - sd chip select pin.
-     * @param download_baudrate - set download baudrate.
-     */
-    NexUpload(const String file_Name,const uint8_t SD_chip_select,uint32_t download_baudrate); 
-    
-    /**
-     * destructor. 
-     * 
-     */
-    ~NexUpload(){}
-    
-    /*
-     * start download.
-     *
-     * @return none.
-     */
-    void upload();
-
-private: /* methods */
-
-    /*
-     * get communicate baudrate. 
-     * 
-     * @return communicate baudrate.
-     *
-     */
-    uint16_t _getBaudrate(void);
-    
-    /*
-     * check tft file.
-     *
-     * @return true if success, false for failure. 
-     */
-    bool _checkFile(void);
-
-    /*
-     * search communicate baudrate.
-     *
-     * @param baudrate - communicate baudrate.
-     *   
-     * @return true if success, false for failure. 
-     */
-    bool _searchBaudrate(uint32_t baudrate);
-
-    /*
-     * set download baudrate.
-     *
-     * @param baudrate - set download baudrate.
-     *   
-     * @return true if success, false for failure. 
-     */
-    bool _setDownloadBaudrate(uint32_t baudrate);
-    
-    /**
-     * start dowload tft file to nextion. 
-     * 
-     * @return none. 
-     */
-    bool _downloadTftFile(void);
-    
-    /*
-     * Send command to Nextion.
-     *
-     * @param cmd - the string of command.
-     *
-     * @return none.
-     */
-    void sendCommand(const char* cmd);
-
-    /*
-     * Receive string data. 
-     * 
-     * @param buffer - save string data.  
-     * @param timeout - set timeout time. 
-     * @param recv_flag - if recv_flag is true,will braak when receive 0x05.
-     *
-     * @return the length of string buffer.
-     *
-     */   
-    uint16_t recvRetString(String &string, uint32_t timeout = 100,bool recv_flag = false);
-    
-private: /* data */ 
-    uint32_t _baudrate; /*nextion serail baudrate*/
-    const char *_file_name; /*nextion tft file name*/
-    File _myFile; /*nextion ftf file*/
-    uint32_t _undownloadByte; /*undownload byte of tft file*/
-    uint8_t _SD_chip_select; /*sd chip select pin*/
-    uint32_t _download_baudrate; /*download baudrate*/
-};
-/**
- * @}
- */
-
-#endif /* #ifndef __NEXDOWNLOAD_H__ */
diff --git a/library.properties b/library.properties
new file mode 100644
index 00000000..5f3b717
--- /dev/null
+++ b/library.properties
@@ -0,0 +1,2 @@
+name=ITEAD Arduino_Nextion Library
+
diff --git a/NexRtc.cpp b/NexRtc.cpp
index 4350acf..641bc14 100755
--- a/NexRtc.cpp
+++ b/NexRtc.cpp
@@ -20,3 +20,2 @@ bool NexRtc::write_rtc_time(char *time)
     String cmd = String("rtc");
-    int i;
     
@@ -34,3 +33,5 @@ bool NexRtc::write_rtc_time(char *time)
         sendCommand(cmd.c_str()); 
-        recvRetCommandFinished();
+        if (!recvRetCommandFinished()) {
+        	return false;
+        }
         
@@ -40,3 +41,5 @@ bool NexRtc::write_rtc_time(char *time)
         sendCommand(cmd.c_str());
-        recvRetCommandFinished();
+        if (!recvRetCommandFinished()) {
+        	return false;
+        }
         
@@ -46,3 +49,5 @@ bool NexRtc::write_rtc_time(char *time)
         sendCommand(cmd.c_str());
-        recvRetCommandFinished();
+        if (!recvRetCommandFinished()) {
+        	return false;
+        }
         
@@ -52,3 +57,5 @@ bool NexRtc::write_rtc_time(char *time)
         sendCommand(cmd.c_str());
-        recvRetCommandFinished();
+        if (!recvRetCommandFinished()) {
+        	return false;
+        }
         
@@ -58,3 +65,5 @@ bool NexRtc::write_rtc_time(char *time)
         sendCommand(cmd.c_str());
-        recvRetCommandFinished();
+        if (!recvRetCommandFinished()) {
+        	return false;
+        }
         
@@ -64,3 +73,3 @@ bool NexRtc::write_rtc_time(char *time)
         sendCommand(cmd.c_str());
-        recvRetCommandFinished();
+        return recvRetCommandFinished();
         
@@ -77,3 +86,2 @@ bool NexRtc::write_rtc_time(uint32_t *time)
     String cmd = String("rtc");
-    int i;
     
@@ -90,3 +98,5 @@ bool NexRtc::write_rtc_time(uint32_t *time)
      sendCommand(cmd.c_str()); 
-     recvRetCommandFinished();
+     if (!recvRetCommandFinished()) {
+    	 return false;
+     }
         
@@ -96,3 +106,5 @@ bool NexRtc::write_rtc_time(uint32_t *time)
      sendCommand(cmd.c_str());
-     recvRetCommandFinished();
+     if (!recvRetCommandFinished()) {
+    	 return false;
+     }
         
@@ -102,3 +114,5 @@ bool NexRtc::write_rtc_time(uint32_t *time)
      sendCommand(cmd.c_str());
-     recvRetCommandFinished();
+     if (!recvRetCommandFinished()) {
+    	 return false;
+     }
         
@@ -108,3 +122,5 @@ bool NexRtc::write_rtc_time(uint32_t *time)
      sendCommand(cmd.c_str());
-     recvRetCommandFinished();
+     if (!recvRetCommandFinished()) {
+    	 return false;
+     }
         
@@ -114,3 +130,5 @@ bool NexRtc::write_rtc_time(uint32_t *time)
      sendCommand(cmd.c_str());
-     recvRetCommandFinished();
+     if (!recvRetCommandFinished()) {
+    	 return false;
+     }
         
@@ -120,3 +138,3 @@ bool NexRtc::write_rtc_time(uint32_t *time)
      sendCommand(cmd.c_str());
-     recvRetCommandFinished();
+     return recvRetCommandFinished();
  
@@ -173,3 +191,5 @@ uint32_t NexRtc::read_rtc_time(char *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&year);
+    if (!recvRetNumber(&year)) {
+    	return false;
+    }
     
@@ -178,3 +198,5 @@ uint32_t NexRtc::read_rtc_time(char *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&mon);
+    if (!recvRetNumber(&mon)) {
+    	return false;
+    }
     
@@ -183,3 +205,5 @@ uint32_t NexRtc::read_rtc_time(char *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&day);
+    if (!recvRetNumber(&day)) {
+    	return false;
+    }
     
@@ -188,3 +212,5 @@ uint32_t NexRtc::read_rtc_time(char *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&hour);
+    if (!recvRetNumber(&hour)) {
+    	return false;
+    }
     
@@ -193,3 +219,5 @@ uint32_t NexRtc::read_rtc_time(char *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&min);
+    if (!recvRetNumber(&min)) {
+    	return false;
+    }
     
@@ -198,3 +226,5 @@ uint32_t NexRtc::read_rtc_time(char *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&sec);
+    if (!recvRetNumber(&sec)) {
+    	return false;
+    }
     
@@ -203,3 +233,5 @@ uint32_t NexRtc::read_rtc_time(char *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&week);
+    if (!recvRetNumber(&week)) {
+    	return false;
+    }
     
@@ -231,3 +263,3 @@ uint32_t NexRtc::read_rtc_time(char *time,uint32_t len)
     else{
-        for(int i=0;i<len;i++)
+        for(unsigned i=0;i<len;i++)
         {
@@ -237,2 +269,3 @@ uint32_t NexRtc::read_rtc_time(char *time,uint32_t len)
   
+    return true;
 }
@@ -246,3 +279,5 @@ uint32_t NexRtc::read_rtc_time(uint32_t *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&time_buf[0]);
+    if (!recvRetNumber(&time_buf[0])) {
+    	return false;
+    }
     
@@ -251,3 +286,5 @@ uint32_t NexRtc::read_rtc_time(uint32_t *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&time_buf[1]);
+    if (!recvRetNumber(&time_buf[1])) {
+    	return false;
+    }
     
@@ -256,3 +293,5 @@ uint32_t NexRtc::read_rtc_time(uint32_t *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&time_buf[2]);
+    if (!recvRetNumber(&time_buf[2])) {
+    	return false;
+    }
     
@@ -261,3 +300,5 @@ uint32_t NexRtc::read_rtc_time(uint32_t *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&time_buf[3]);
+    if (!recvRetNumber(&time_buf[3])) {
+    	return false;
+    }
     
@@ -266,3 +307,5 @@ uint32_t NexRtc::read_rtc_time(uint32_t *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&time_buf[4]);
+    if (!recvRetNumber(&time_buf[4])) {
+    	return false;
+    }
     
@@ -271,3 +314,5 @@ uint32_t NexRtc::read_rtc_time(uint32_t *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&time_buf[5]);
+    if (!recvRetNumber(&time_buf[5])) {
+    	return false;
+    }
     
@@ -276,6 +321,8 @@ uint32_t NexRtc::read_rtc_time(uint32_t *time,uint32_t len)
     sendCommand(cmd.c_str());
-    recvRetNumber(&time_buf[6]);
+    if (!recvRetNumber(&time_buf[6])) {
+    	return false;
+    }
     
 
-    for(int i=0;i<len;i++)
+    for(unsigned i=0;i<len;i++)
     {
@@ -284,2 +331,3 @@ uint32_t NexRtc::read_rtc_time(uint32_t *time,uint32_t len)
  
+    return true;
 }
@@ -290,3 +338,2 @@ uint32_t NexRtc::read_rtc_time(char *time_type,uint32_t *number)
     String cmd = String("get rtc");
-    char buf[10] = {0};
     
diff --git a/NexPage.cpp b/NexPage.cpp
index e6ca350..b701ca1 100644
--- a/NexPage.cpp
+++ b/NexPage.cpp
@@ -24,4 +24,2 @@ bool NexPage::show(void)
 {
-    uint8_t buffer[4] = {0};
-
     const char *name = getObjName();

diff --git a/crypto/crypto_misc.c b/crypto/crypto_misc.c
index dca7e5f..20a6741 100644
--- a/crypto/crypto_misc.c
+++ b/crypto/crypto_misc.c
@@ -44,7 +44,7 @@
 
 #ifdef ESP8266
 #define CONFIG_SSL_SKELETON_MODE 1
-uint32_t phy_get_rand();
+uint32_t os_random();
 #endif
 
 #if defined(CONFIG_USE_DEV_URANDOM)
@@ -171,7 +171,7 @@ EXP_FUNC int STDCALL get_random(int num_rand_bytes, uint8_t *rand_data)
     CryptGenRandom(gCryptProv, num_rand_bytes, rand_data);
 #elif defined(ESP8266)
     for (size_t cb = 0; cb < num_rand_bytes; cb += 4) {
-        uint32_t r = phy_get_rand();
+        uint32_t r = os_random();
         size_t left = num_rand_bytes - cb;
         left = (left < 4) ? left : 4;
         memcpy(rand_data + cb, &r, left);
@@ -289,7 +289,7 @@ EXP_FUNC void STDCALL print_blob(const char *format,
 
     va_start(ap, size);
     snprintf(tmp, sizeof(tmp), "SSL: %s\n", format);
-    vprintf(tmp, ap);
+    m_vprintf(tmp, ap);
     print_hex_init(size);
     for (i = 0; i < size; i++)
     {
diff --git a/replacements/time.c b/replacements/time.c
index 4972119..da75839 100644
--- a/replacements/time.c
+++ b/replacements/time.c
@@ -24,21 +24,14 @@ extern uint64_t system_mktime(uint32_t year, uint32_t mon, uint32_t day, uint32_
 
 static int errno_var = 0;
 
-int* __errno(void) {
+// These functions are implemented in Espressif SDK versions 2 and later (libmain.a) so we weaken them to avoid linker problems
+#define WEAK_ATTR __attribute__((weak))
+
+int* WEAK_ATTR __errno(void) {
     // DEBUGV("__errno is called last error: %d (not current)\n", errno_var);
     return &errno_var;
 }
 
-unsigned long millis(void)
-{
-	return system_get_time() / 1000UL;
-}
-
-unsigned long micros(void)
-{
-	return system_get_time();
-}
-
 #ifndef _TIMEVAL_DEFINED
 #define _TIMEVAL_DEFINED
 struct timeval {
@@ -60,12 +53,12 @@ static time_t s_bootTime = 0;
 // calculate offset used in gettimeofday
 static void ensureBootTimeIsSet()
 {
-    if (!s_bootTime)
+    if (s_bootTime == 0)
     {
         time_t now = sntp_get_current_timestamp();
-        if (now)
+        if (now != 0)
         {
-            s_bootTime =  now - millis() / 1000;
+            s_bootTime =  now - (system_get_time() / 1000000);
         }
     }
 }
@@ -79,7 +72,7 @@ static void setServer(int id, const char* name_or_ip)
     }
 }
 
-void configTime(int timezone, int daylightOffset_sec, const char* server1, const char* server2, const char* server3)
+void WEAK_ATTR configTime(int timezone, int daylightOffset_sec, const char* server1, const char* server2, const char* server3)
 {
     sntp_stop();
 
@@ -93,22 +86,24 @@ void configTime(int timezone, int daylightOffset_sec, const char* server1, const
     sntp_init();
 }
 
-int clock_gettime(clockid_t unused, struct timespec *tp)
+int WEAK_ATTR clock_gettime(clockid_t unused, struct timespec *tp)
 {
-    tp->tv_sec  = millis() / 1000;
-    tp->tv_nsec = micros() * 1000;
+    unsigned long us = system_get_time();
+    tp->tv_sec  = us / 1000000UL;
+    us %= 1000000UL;
+    tp->tv_nsec = us * 1000;
     return 0;
 }
 
 // seconds since 1970
-time_t mktime(struct tm *t)
+time_t WEAK_ATTR mktime(struct tm *t)
 {
     // system_mktime expects month in range 1..12
     #define START_MONTH 1
     return DIFF1900TO1970 + system_mktime(t->tm_year, t->tm_mon + START_MONTH, t->tm_mday, t->tm_hour, t->tm_min, t->tm_sec);
 }
 
-time_t time(time_t * t)
+time_t WEAK_ATTR time(time_t * t)
 {
     time_t seconds = sntp_get_current_timestamp();
     if (t)
@@ -118,30 +113,32 @@ time_t time(time_t * t)
     return seconds;
 }
 
-char* asctime(const struct tm *t)
+char* WEAK_ATTR asctime(const struct tm *t)
 {
     return sntp_asctime(t);
 }
 
-struct tm* localtime(const time_t *clock)
+struct tm* WEAK_ATTR localtime(const time_t *clock)
 {
     return sntp_localtime(clock);
 }
 
-char* ctime(const time_t *t)
+char* WEAK_ATTR ctime(const time_t *t)
 {
     struct tm* p_tm = localtime(t);
     char* result = asctime(p_tm);
     return result;
 }
 
-int gettimeofday(struct timeval *tp, void *tzp)
+int WEAK_ATTR gettimeofday(struct timeval *tp, void *tzp)
 {
     if (tp)
     {
         ensureBootTimeIsSet();
-        tp->tv_sec  = (s_bootTime + millis()) / 1000;
-        tp->tv_usec = micros() * 1000;
+        unsigned long us = system_get_time();
+        tp->tv_sec  = s_bootTime + (us / 1000000UL);
+        us %= 1000000UL;
+        tp->tv_usec = us * 1000UL;
     }
     return 0;
 }
diff --git a/ssl/os_port.h b/ssl/os_port.h
index e0b9e46..268512e 100644
--- a/ssl/os_port.h
+++ b/ssl/os_port.h
@@ -43,7 +43,12 @@ extern "C" {
 
 #include "os_int.h"
 #include "config.h"
-#include <stdio.h>
+#include <FakePgmSpace.h>
+
+#undef WIN32
+#ifndef ESP8266
+#define ESP8266
+#endif
 
 #ifdef WIN32
 #define STDCALL                 __stdcall
@@ -62,12 +67,11 @@ extern "C" {
 
 #include "util/time.h"
 #include <errno.h>
+#ifndef alloca
 #define alloca(size) __builtin_alloca(size)
+#endif
 #define TTY_FLUSH()
-#ifdef putc
 #undef putc
-#endif
-#define putc(x, f)   ets_putc(x)
 
 #define SOCKET_READ(A,B,C)      ax_port_read(A,B,C)
 #define SOCKET_WRITE(A,B,C)     ax_port_write(A,B,C)
@@ -92,78 +96,23 @@ extern "C" {
 #define be64toh(x) __bswap_constant_64(x)
 #endif
 
-void ax_wdt_feed();
-
-#ifndef PROGMEM
-#define PROGMEM __attribute__((aligned(4))) __attribute__((section(".irom.text")))
-#endif
-
-#ifndef WITH_PGM_READ_HELPER
-#define ax_array_read_u8(x, y) x[y]
-#else
-
-static inline uint8_t pgm_read_byte(const void* addr) {
-  register uint32_t res;
-  __asm__("extui    %0, %1, 0, 2\n"     /* Extract offset within word (in bytes) */
-      "sub      %1, %1, %0\n"       /* Subtract offset from addr, yielding an aligned address */
-      "l32i.n   %1, %1, 0x0\n"      /* Load word from aligned address */
-      "slli     %0, %0, 3\n"        /* Multiply offset by 8, yielding an offset in bits */
-      "ssr      %0\n"               /* Prepare to shift by offset (in bits) */
-      "srl      %0, %1\n"           /* Shift right; now the requested byte is the first one */
-      :"=r"(res), "=r"(addr)
-      :"1"(addr)
-      :);
-  return (uint8_t) res;     /* This masks the lower byte from the returned word */
-}
+extern void system_soft_wdt_feed(void);
+#define ax_wdt_feed system_soft_wdt_feed
 
 #define ax_array_read_u8(x, y) pgm_read_byte((x)+(y))
-#endif //WITH_PGM_READ_HELPER
 
-#ifdef printf
-#undef printf
-#endif
-//#define printf(...)  ets_printf(__VA_ARGS__)
-#define PSTR(s) (__extension__({static const char __c[] PROGMEM = (s); &__c[0];}))
-#define PGM_VOID_P const void *
-static inline void* memcpy_P(void* dest, PGM_VOID_P src, size_t count) {
-    const uint8_t* read = (const uint8_t*)(src);
-    uint8_t* write = (uint8_t*)(dest);
-
-    while (count)
-    {
-        *write++ = pgm_read_byte(read++);
-        count--;
-    }
-
-    return dest;
-}
-static inline int strlen_P(const char *str) {
-    int cnt = 0;
-    while (pgm_read_byte(str++)) cnt++;
-    return cnt;
-}
-static inline int memcmp_P(const void *a1, const void *b1, size_t len) {
-    const uint8_t* a = (const uint8_t*)(a1);
-    uint8_t* b = (uint8_t*)(b1);
-    for (size_t i=0; i<len; i++) {
-        uint8_t d = pgm_read_byte(a) - pgm_read_byte(b);
-        if (d) return d;
-        a++;
-        b++;
-    }
-    return 0;
-}
+#ifdef AXTLS_BUILD
 
-#define printf(fmt, ...) do { static const char fstr[] PROGMEM = fmt; char rstr[sizeof(fmt)]; memcpy_P(rstr, fstr, sizeof(rstr)); ets_printf(rstr, ##__VA_ARGS__); } while (0)
-#define strcpy_P(dst, src) do { static const char fstr[] PROGMEM = src; memcpy_P(dst, fstr, sizeof(src)); } while (0)
+#define printf(fmt, ...) m_printf(_F(fmt), ##__VA_ARGS__)
 
-// Copied from ets_sys.h to avoid compile warnings
-extern int ets_printf(const char *format, ...)  __attribute__ ((format (printf, 1, 2)));
-extern int ets_putc(int);
+#undef strcpy_P
+#define strcpy_P(a, str) strcpy(a, _F(str))
+
+#endif /* AXTLS_BUILD */
 
 // The network interface in WiFiClientSecure
-extern int ax_port_read(int fd, uint8_t* buffer, size_t count);
-extern int ax_port_write(int fd, uint8_t* buffer, size_t count);
+extern int ax_port_read(int fd, uint8_t* buffer, int count);
+extern int ax_port_write(int fd, uint8_t* buffer, uint16_t count);
 
 // TODO: Why is this not being imported from <string.h>?
 extern char *strdup(const char *orig);
@@ -260,7 +209,8 @@ EXP_FUNC int STDCALL getdomainname(char *buf, int buf_size);
 #endif  /* Not Win32 */
 
 /* some functions to mutate the way these work */
-inline uint32_t htonl(uint32_t n){
+#ifndef ntohl
+static inline uint32_t htonl(uint32_t n){
   return ((n & 0xff) << 24) |
     ((n & 0xff00) << 8) |
     ((n & 0xff0000UL) >> 8) |
@@ -268,6 +218,8 @@ inline uint32_t htonl(uint32_t n){
 }
 
 #define ntohl htonl
+#define LWIP_DONT_PROVIDE_BYTEORDER_FUNCTIONS
+#endif
 
 EXP_FUNC int STDCALL ax_open(const char *pathname, int flags); 
 
diff --git a/ssl/tls1.c b/ssl/tls1.c
index 10b592c..be0fc29 100644
--- a/ssl/tls1.c
+++ b/ssl/tls1.c
@@ -1368,6 +1368,10 @@ int basic_read(SSL *ssl, uint8_t **in_data)
     int read_len, is_client = IS_SET_SSL_FLAG(SSL_IS_CLIENT);
     uint8_t *buf = ssl->bm_data;
 
+    if (ssl->can_free_certificates) {
+    	certificate_free(ssl);
+    }
+
     if (IS_SET_SSL_FLAG(SSL_SENT_CLOSE_NOTIFY))
         return SSL_CLOSE_NOTIFY;
 
@@ -1426,6 +1430,9 @@ int basic_read(SSL *ssl, uint8_t **in_data)
             goto error;
         }
 
+        memcpy(ssl->hmac_header, buf, 3);       /* store for hmac */
+        ssl->record_type = buf[0];
+
         /* is the allocated buffer large enough to handle all the data? if not, increase its size*/
         if (ssl->need_bytes > ssl->max_plain_length+RT_EXTRA-BM_RECORD_OFFSET)
         {
@@ -1439,8 +1446,6 @@ int basic_read(SSL *ssl, uint8_t **in_data)
         }
 
         CLR_SSL_FLAG(SSL_NEED_RECORD);
-        memcpy(ssl->hmac_header, buf, 3);       /* store for hmac */
-        ssl->record_type = buf[0];
         goto error;                         /* no error, we're done */
     }
 
diff --git a/tools/make_certs.sh b/tools/make_certs.sh
index fc6cc90..3113355 100644
--- a/tools/make_certs.sh
+++ b/tools/make_certs.sh
@@ -29,7 +29,12 @@
 # THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #
 
-AXDIR=`pwd`/`dirname $0`
+OLDCWD=`pwd`
+
+if [ -z $AXDIR ]; then
+	AXDIR = $OLDCWD/`dirname $0`
+fi
+
 CWD=`mktemp -d` && cd $dir
 cd $CWD 
 
@@ -42,36 +47,21 @@ PROJECT_NAME="axTLS Project"
 # Generate the openssl configuration files.
 cat > ca_cert.conf << EOF  
 [ req ]
-distinguished_name      = req_distinguished_name
-prompt                  = no
-req_extensions          = v3_ca
+distinguished_name     = req_distinguished_name
+prompt                 = no
 
 [ req_distinguished_name ]
  O                      = $PROJECT_NAME Dodgy Certificate Authority
-
-[ v3_ca ]
-basicConstraints        = critical, CA:true
-keyUsage                = critical, cRLSign, keyCertSign, digitalSignature
 EOF
 
 cat > certs.conf << EOF  
 [ req ]
-distinguished_name      = req_distinguished_name
-prompt                  = no
-req_extensions          = v3_usr_cert
+distinguished_name     = req_distinguished_name
+prompt                 = no
 
 [ req_distinguished_name ]
  O                      = $PROJECT_NAME
- CN                     = localhost
-
-[ v3_usr_cert ]
-basicConstraints        = critical, CA:false
-keyUsage                = critical, nonRepudiation, digitalSignature, keyEncipherment
-subjectAltName          = @alt_names
- 
-[alt_names]
-DNS.1 = www.example.net
-DNS.2 = www.example.org
+ CN                     = 127.0.0.1
 EOF
 
 cat > device_cert.conf << EOF  
@@ -83,130 +73,72 @@ prompt                 = no
  O                      = $PROJECT_NAME Device Certificate
 EOF
 
-cat > intermediate_ca.conf << EOF  
-[ req ]
-distinguished_name     = req_distinguished_name
-prompt                 = no
-req_extensions         = v3_intermediate_ca
-
-[ req_distinguished_name ]
- O                      = $PROJECT_NAME Intermediate CA
-
-[ v3_intermediate_ca ]
-basicConstraints        = critical, CA:true, pathlen:0
-keyUsage                = cRLSign, keyCertSign, digitalSignature
-EOF
-
-cat > intermediate_ca2.conf << EOF  
-[ req ]
-distinguished_name      = req_distinguished_name
-prompt                  = no
-req_extensions          = v3_intermediate_ca2
-
-[ req_distinguished_name ]
- O                      = $PROJECT_NAME Intermediate 2 CA
-
-[ v3_intermediate_ca2 ]
-basicConstraints        = critical, CA:true, pathlen:10
-keyUsage                = encipherOnly, keyCertSign, decipherOnly
-EOF
-
 # private key generation
-openssl genrsa -out axTLS.ca_key.pem 2048
+openssl genrsa -out axTLS.ca_key.pem 1024
+openssl genrsa -out axTLS.key_512.pem 512
 openssl genrsa -out axTLS.key_1024.pem 1024
+openssl genrsa -out axTLS.key_1042.pem 1042
 openssl genrsa -out axTLS.key_2048.pem 2048
 openssl genrsa -out axTLS.key_4096.pem 4096
-openssl genrsa -out axTLS.key_device.pem 2048
-openssl genrsa -out axTLS.key_intermediate_ca.pem 2048
-openssl genrsa -out axTLS.key_intermediate_ca2.pem 2048
-openssl genrsa -out axTLS.key_end_chain.pem 2048
-openssl genrsa -aes128 -passout pass:abcd -out axTLS.key_aes128.pem 1024
-openssl genrsa -aes256 -passout pass:abcd -out axTLS.key_aes256.pem 1024
+openssl genrsa -out axTLS.device_key.pem 1024
+openssl genrsa -aes128 -passout pass:abcd -out axTLS.key_aes128.pem 512
+openssl genrsa -aes256 -passout pass:abcd -out axTLS.key_aes256.pem 512
+
 
 # convert private keys into DER format
+openssl rsa -in axTLS.key_512.pem -out axTLS.key_512 -outform DER
 openssl rsa -in axTLS.key_1024.pem -out axTLS.key_1024 -outform DER
+openssl rsa -in axTLS.key_1042.pem -out axTLS.key_1042 -outform DER
 openssl rsa -in axTLS.key_2048.pem -out axTLS.key_2048 -outform DER
 openssl rsa -in axTLS.key_4096.pem -out axTLS.key_4096 -outform DER
+openssl rsa -in axTLS.device_key.pem -out axTLS.device_key -outform DER
 
 # cert requests
-openssl req -out axTLS.ca_x509.csr -key axTLS.ca_key.pem -new \
+openssl req -out axTLS.ca_x509.req -key axTLS.ca_key.pem -new \
             -config ./ca_cert.conf 
-openssl req -out axTLS.x509_1024.csr -key axTLS.key_1024.pem -new \
+openssl req -out axTLS.x509_512.req -key axTLS.key_512.pem -new \
+            -config ./certs.conf 
+openssl req -out axTLS.x509_1024.req -key axTLS.key_1024.pem -new \
             -config ./certs.conf 
-openssl req -out axTLS.x509_2048.csr -key axTLS.key_2048.pem -new \
+openssl req -out axTLS.x509_1042.req -key axTLS.key_1042.pem -new \
             -config ./certs.conf 
-openssl req -out axTLS.x509_4096.csr -key axTLS.key_4096.pem -new \
+openssl req -out axTLS.x509_2048.req -key axTLS.key_2048.pem -new \
             -config ./certs.conf 
-openssl req -out axTLS.x509_device.csr -key axTLS.key_device.pem -new \
+openssl req -out axTLS.x509_4096.req -key axTLS.key_4096.pem -new \
+            -config ./certs.conf 
+openssl req -out axTLS.x509_device.req -key axTLS.device_key.pem -new \
             -config ./device_cert.conf
-openssl req -out axTLS.x509_intermediate_ca.csr \
-            -key axTLS.key_intermediate_ca.pem -new \
-            -config ./intermediate_ca.conf
-openssl req -out axTLS.x509_intermediate_ca2.csr \
-            -key axTLS.key_intermediate_ca2.pem -new \
-            -config ./intermediate_ca2.conf
-openssl req -out axTLS.x509_end_chain.csr -key axTLS.key_end_chain.pem -new \
-            -config ./certs.conf
-openssl req -out axTLS.x509_aes128.csr -key axTLS.key_aes128.pem \
+openssl req -out axTLS.x509_aes128.req -key axTLS.key_aes128.pem \
             -new -config ./certs.conf -passin pass:abcd
-openssl req -out axTLS.x509_aes256.csr -key axTLS.key_aes256.pem \
+openssl req -out axTLS.x509_aes256.req -key axTLS.key_aes256.pem \
             -new -config ./certs.conf -passin pass:abcd
 
 # generate the actual certs.
-openssl x509 -req -in axTLS.ca_x509.csr -out axTLS.ca_x509.pem \
-            -sha1 -days 5000 -signkey axTLS.ca_key.pem \
-            -CAkey axTLS.ca_key.pem -extfile ./ca_cert.conf -extensions v3_ca
-openssl x509 -req -in axTLS.ca_x509.csr -out axTLS.ca_x509_sha256.pem \
-            -sha256 -days 5000 -signkey axTLS.ca_key.pem \
-            -CAkey axTLS.ca_key.pem -extfile ./ca_cert.conf -extensions v3_ca
-openssl x509 -req -in axTLS.x509_1024.csr -out axTLS.x509_1024.pem \
+openssl x509 -req -in axTLS.ca_x509.req -out axTLS.ca_x509.pem \
+            -sha1 -days 5000 -signkey axTLS.ca_key.pem
+openssl x509 -req -in axTLS.x509_512.req -out axTLS.x509_512.pem \
             -sha1 -CAcreateserial -days 5000 \
             -CA axTLS.ca_x509.pem -CAkey axTLS.ca_key.pem
-openssl x509 -req -in axTLS.x509_1024.csr -out axTLS.x509_1024_sha256.pem \
-            -sha256 -CAcreateserial -days 5000 \
-            -CA axTLS.ca_x509_sha256.pem -CAkey axTLS.ca_key.pem
-openssl x509 -req -in axTLS.x509_1024.csr -out axTLS.x509_1024_sha384.pem \
-            -sha384 -CAcreateserial -days 5000 \
-            -CA axTLS.ca_x509_sha256.pem -CAkey axTLS.ca_key.pem
-openssl x509 -req -in axTLS.x509_1024.csr -out axTLS.x509_1024_sha512.pem \
-            -sha512 -CAcreateserial -days 5000 \
-            -CA axTLS.ca_x509_sha256.pem -CAkey axTLS.ca_key.pem
-openssl x509 -req -in axTLS.x509_2048.csr -out axTLS.x509_2048.pem \
+openssl x509 -req -in axTLS.x509_1024.req -out axTLS.x509_1024.pem \
             -sha1 -CAcreateserial -days 5000 \
             -CA axTLS.ca_x509.pem -CAkey axTLS.ca_key.pem
-openssl x509 -req -in axTLS.x509_4096.csr -out axTLS.x509_4096.pem \
+openssl x509 -req -in axTLS.x509_1042.req -out axTLS.x509_1042.pem \
             -sha1 -CAcreateserial -days 5000 \
             -CA axTLS.ca_x509.pem -CAkey axTLS.ca_key.pem
-openssl x509 -req -in axTLS.x509_device.csr -out axTLS.x509_device.pem \
+openssl x509 -req -in axTLS.x509_2048.req -out axTLS.x509_2048.pem \
+            -md5 -CAcreateserial -days 5000 \
+            -CA axTLS.ca_x509.pem -CAkey axTLS.ca_key.pem
+openssl x509 -req -in axTLS.x509_4096.req -out axTLS.x509_4096.pem \
+            -md5 -CAcreateserial -days 5000 \
+            -CA axTLS.ca_x509.pem -CAkey axTLS.ca_key.pem
+openssl x509 -req -in axTLS.x509_device.req -out axTLS.x509_device.pem \
             -sha1 -CAcreateserial -days 5000 \
-            -CA axTLS.x509_1024.pem -CAkey axTLS.key_1024.pem
-openssl x509 -req -in axTLS.x509_intermediate_ca.csr -out axTLS.x509_intermediate_ca.pem \
-            -sha256 -CAcreateserial -days 5000 \
-            -CA axTLS.ca_x509.pem -CAkey axTLS.ca_key.pem \
-            -extfile ./intermediate_ca.conf -extensions v3_intermediate_ca
-openssl x509 -req -in axTLS.x509_intermediate_ca2.csr -out axTLS.x509_intermediate_ca2.pem \
-            -sha256 -CAcreateserial -days 5000 \
-            -CA axTLS.x509_intermediate_ca.pem \
-            -CAkey axTLS.key_intermediate_ca.pem \
-            -extfile ./intermediate_ca2.conf -extensions v3_intermediate_ca2
-openssl x509 -req -in axTLS.x509_end_chain.csr -out axTLS.x509_end_chain.pem \
-            -sha256 -CAcreateserial -days 5000 \
-            -CA axTLS.x509_intermediate_ca.pem \
-            -CAkey axTLS.key_intermediate_ca.pem \
-            -extfile ./certs.conf -extensions v3_usr_cert 
-# basic constraint path len failure
-openssl x509 -req -in axTLS.x509_end_chain.csr \
-            -out axTLS.x509_end_chain_bad.pem \
-            -sha256 -CAcreateserial -days 5000 \
-            -CA axTLS.x509_intermediate_ca2.pem \
-            -CAkey axTLS.key_intermediate_ca2.pem \
-            -extfile ./certs.conf -extensions v3_usr_cert 
-cat axTLS.x509_intermediate_ca.pem >> axTLS.x509_intermediate_ca2.pem 
-openssl x509 -req -in axTLS.x509_aes128.csr \
+            -CA axTLS.x509_512.pem -CAkey axTLS.key_512.pem
+openssl x509 -req -in axTLS.x509_aes128.req \
             -out axTLS.x509_aes128.pem \
             -sha1 -CAcreateserial -days 5000 \
             -CA axTLS.ca_x509.pem -CAkey axTLS.ca_key.pem
-openssl x509 -req -in axTLS.x509_aes256.csr \
+openssl x509 -req -in axTLS.x509_aes256.req \
             -out axTLS.x509_aes256.pem \
             -sha1 -CAcreateserial -days 5000 \
             -CA axTLS.ca_x509.pem -CAkey axTLS.ca_key.pem
@@ -214,32 +146,35 @@ openssl x509 -req -in axTLS.x509_aes256.csr \
 # note: must be root to do this
 DATE_NOW=`date`
 if date -s "Jan 1 2025"; then
-openssl x509 -req -in axTLS.x509_1024.csr -out axTLS.x509_bad_before.pem \
+openssl x509 -req -in axTLS.x509_512.req -out axTLS.x509_bad_before.pem \
             -sha1 -CAcreateserial -days 365 \
             -CA axTLS.ca_x509.pem -CAkey axTLS.ca_key.pem
 date -s "$DATE_NOW"
 touch axTLS.x509_bad_before.pem
 fi
-openssl x509 -req -in axTLS.x509_1024.csr -out axTLS.x509_bad_after.pem \
+openssl x509 -req -in axTLS.x509_512.req -out axTLS.x509_bad_after.pem \
             -sha1 -CAcreateserial -days -365 \
             -CA axTLS.ca_x509.pem -CAkey axTLS.ca_key.pem
 
 # some cleanup
-rm axTLS*.csr
-rm *.srl
+rm axTLS*.req
+rm axTLS.srl
 rm *.conf
 
 # need this for the client tests
 openssl x509 -in axTLS.ca_x509.pem -outform DER -out axTLS.ca_x509.cer 
+openssl x509 -in axTLS.x509_512.pem -outform DER -out axTLS.x509_512.cer
 openssl x509 -in axTLS.x509_1024.pem -outform DER -out axTLS.x509_1024.cer
+openssl x509 -in axTLS.x509_1042.pem -outform DER -out axTLS.x509_1042.cer
 openssl x509 -in axTLS.x509_2048.pem -outform DER -out axTLS.x509_2048.cer
 openssl x509 -in axTLS.x509_4096.pem -outform DER -out axTLS.x509_4096.cer
+openssl x509 -in axTLS.x509_device.pem -outform DER -out axTLS.x509_device.cer
 
 # generate pkcs8 files (use RC4-128 for encryption)
-openssl pkcs8 -in axTLS.key_1024.pem -passout pass:abcd -topk8 -v1 PBE-SHA1-RC4-128 -out axTLS.encrypted_pem.p8
-openssl pkcs8 -in axTLS.key_1024.pem -passout pass:abcd -topk8 -outform DER -v1 PBE-SHA1-RC4-128 -out axTLS.encrypted.p8
-openssl pkcs8 -in axTLS.key_1024.pem -nocrypt -topk8 -out axTLS.unencrypted_pem.p8
-openssl pkcs8 -in axTLS.key_1024.pem -nocrypt -topk8 -outform DER -out axTLS.unencrypted.p8
+openssl pkcs8 -in axTLS.key_512.pem -passout pass:abcd -topk8 -v1 PBE-SHA1-RC4-128 -out axTLS.encrypted_pem.p8
+openssl pkcs8 -in axTLS.key_512.pem -passout pass:abcd -topk8 -outform DER -v1 PBE-SHA1-RC4-128 -out axTLS.encrypted.p8
+openssl pkcs8 -in axTLS.key_512.pem -nocrypt -topk8 -out axTLS.unencrypted_pem.p8
+openssl pkcs8 -in axTLS.key_512.pem -nocrypt -topk8 -outform DER -out axTLS.unencrypted.p8
 
 # generate pkcs12 files (use RC4-128 for encryption)
 openssl pkcs12 -export -in axTLS.x509_1024.pem -inkey axTLS.key_1024.pem -certfile axTLS.ca_x509.pem -keypbe PBE-SHA1-RC4-128 -certpbe PBE-SHA1-RC4-128 -name "p12_with_CA" -out axTLS.withCA.p12 -password pass:abcd
@@ -251,6 +186,6 @@ cat axTLS.ca_x509.pem >> axTLS.x509_device.pem
 
 # set default key/cert for use in the server
 xxd -i axTLS.x509_1024.cer | sed -e \
-        "s/axTLS_x509_1024_cer/default_certificate/" > $AXDIR/../ssl/cert.h
+        "s/axTLS_x509_1024_cer/default_certificate/" > $AXDIR/cert.h
 xxd -i axTLS.key_1024 | sed -e \
-        "s/axTLS_key_1024/default_private_key/" > $AXDIR/../ssl/private_key.h
+        "s/axTLS_key_1024/default_private_key/" > $AXDIR/private_key.h
diff --git a/compat/lwipr_compat.c b/compat/lwipr_compat.c
index c6de55b..781e131 100644
--- a/compat/lwipr_compat.c
+++ b/compat/lwipr_compat.c
@@ -154,12 +154,20 @@ int axl_ssl_read(SSL *ssl, struct tcp_pcb *tcp, struct pbuf *pin, struct pbuf **
 			}
 			else {
 				AXL_DEBUG_PRINT("axl_ssl_read: Got more than one SSL packet inside one TCP packet\n");
-				total_read_buffer = (uint8_t *)realloc(total_read_buffer, total_bytes + read_bytes);
+				uint8_t* new_buffer = (uint8_t *)realloc(total_read_buffer, total_bytes + read_bytes);
+				if(new_buffer == NULL) {
+					free(total_read_buffer);
+					total_read_buffer = NULL;
+				} else {
+					total_read_buffer = new_buffer;
+				}
 			}
 
 			if(total_read_buffer == NULL) {
 				AXL_DEBUG_PRINT("axl_ssl_read: Unable to allocate additional %d bytes", read_bytes);
-				while(1) {}
+				total_bytes = -1;
+				break;
+//				while(1) {}
 			}
 
 			memcpy(total_read_buffer + total_bytes, read_buffer, read_bytes);
@@ -170,7 +178,13 @@ int axl_ssl_read(SSL *ssl, struct tcp_pcb *tcp, struct pbuf *pin, struct pbuf **
 	if(total_bytes > 0) {
 		// put the decrypted data in a brand new pbuf
 		*pout = pbuf_alloc(PBUF_TRANSPORT, total_bytes, PBUF_RAM);
-		memcpy((*pout)->payload, total_read_buffer, total_bytes);
+		if(*pout != NULL) {
+			memcpy((*pout)->payload, total_read_buffer, total_bytes);
+		}
+		else {
+			AXL_DEBUG_PRINT("Unable to allocate pbuf memory. Required %d. Check MEM_SIZE in your lwipopts.h file and increase if needed.", total_bytes);
+			total_bytes = -1;
+		}
 		free(total_read_buffer);
 	}
 
diff --git a/compat/lwipr_compat.h b/compat/lwipr_compat.h
index 0916412..4bb7d07 100644
--- a/compat/lwipr_compat.h
+++ b/compat/lwipr_compat.h
@@ -27,9 +27,6 @@ extern "C" {
 #define ERR_AXL_INVALID_CLIENTFD_DATA -104
 #define ERR_AXL_INVALID_PBUF -105
 
-#define SOCKET_READ(A, B, C) 	ax_port_read(A, B, C)
-#define SOCKET_WRITE(A, B, C) 	ax_port_write(A, B, C)
-
 /**
  * Define watchdog function to be called during CPU intensive operations.
  */
diff --git a/crypto/bigint.c b/crypto/bigint.c
index d90b093..f18fbd5 100644
--- a/crypto/bigint.c
+++ b/crypto/bigint.c
@@ -688,7 +688,7 @@ void bi_print(const char *label, bigint *x)
         {
             comp mask = 0x0f << (j*4);
             comp num = (x->comps[i] & mask) >> (j*4);
-            putc((num <= 9) ? (num + '0') : (num + 'A' - 10), stdout);
+            m_putc((num <= 9) ? (num + '0') : (num + 'A' - 10));
         }
     }  
 

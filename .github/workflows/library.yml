name: Continuous Integration (CI)

on:
  workflow_call:
    inputs:
      sming_repo:
        description: 'Full URL for Sming repository'
        default: 'https://github.com/SmingHub/Sming'
        type: string
      sming_branch:
        description: 'Sming branch to run against'
        default: 'develop'
        type: string
      alias:
        description: 'Library alias'
        default: ''
        type: string

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest]
        variant: [esp8266, host, esp32, esp32s2, esp32c3, rp2040]
        include:
          - variant: esp8266
            arch: Esp8266
          - variant: host
            arch: Host
          - variant: esp32
            arch: Esp32
          - variant: esp32s2
            arch: Esp32
          - variant: esp32c3
            arch: Esp32
          - variant: rp2040
            arch: Rp2040

    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}-${{ toJson(matrix) }}
      cancel-in-progress: true

    runs-on: ${{ matrix.os }}

    steps:
    - name: Fix autocrlf setting
      run: |
        git config --global --add core.autocrlf input

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create library alias
      if: ${{ inputs.alias }}
      shell: pwsh
      run: |
        New-Item -ItemType SymbolicLink -Path "../${{ inputs.alias }}" -Target (Resolve-Path ".").path

    - name: Checkout sming
      run: |
        git clone ${{ inputs.sming_repo }} -b ${{ inputs.sming_branch }} --depth 1 ../../sming

    - name: Configure environment
      shell: pwsh
      run: |
        "SMING_HOME=" + (Resolve-Path "../../sming/Sming").path >> $env:GITHUB_ENV
        "COMPONENT_SEARCH_DIRS=" + (Resolve-Path "..").path >> $env:GITHUB_ENV
        "CI_MAKEFILE=" + (Resolve-Path "../../sming/Tools/ci/library/Makefile") >> $env:GITHUB_ENV
        "SMING_ARCH=${{ matrix.arch }}" >> $env:GITHUB_ENV
        "SMING_SOC=${{ matrix.variant }}" >> $env:GITHUB_ENV

    - name: Install build tools for Ubuntu
      if: ${{ matrix.os ==  'ubuntu-20.04' }}
      run: |
        . $SMING_HOME/../Tools/export.sh
        $SMING_HOME/../Tools/ci/install.sh $SMING_ARCH

    - name: Install build tools for Windows   
      if: ${{ matrix.os ==  'windows-latest' }}
      run: |
        . "$env:SMING_HOME/../Tools/ci/setenv.ps1"
        . "$env:SMING_HOME/../Tools/ci/install.cmd"

    - name: Build and Test for ${{matrix.arch}} on Ubuntu
      env:
        CLANG_FORMAT: clang-format-8
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: |
        . $SMING_HOME/../Tools/export.sh
        make -j$(nproc) -f $CI_MAKEFILE

    - name: Build and Test for ${{matrix.arch}} on Windows
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        . "$env:SMING_HOME/../Tools/ci/setenv.ps1"
        make -j $env:NUMBER_OF_PROCESSORS -f $env:CI_MAKEFILE

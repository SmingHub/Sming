image:
- Ubuntu2004
- Visual Studio 2019

platform: x86

environment:
  SMING_SECRET:
    secure: rCs19uNvDR07w1d2pfwJIzewiEQ2zpKXdqFp5BqHQAA=

  matrix:
    - SMING_ARCH: Host
      INSTALL_OPTS: host doc

    - SMING_ARCH: Esp8266
      INSTALL_OPTS: esp8266
      BUILD_COMPILER: udk

    - SMING_ARCH: Esp8266
      INSTALL_OPTS: esp8266
      BUILD_COMPILER: eqt

    - SMING_ARCH: Esp32
      SMING_SOC: esp32
      INSTALL_OPTS: esp32

    - SMING_ARCH: Esp32
      SMING_SOC: esp32s2
      INSTALL_OPTS: esp32

    - SMING_ARCH: Esp32
      SMING_SOC: esp32c3
      INSTALL_OPTS: esp32

    - SMING_ARCH: Rp2040
      INSTALL_OPTS: rp2040

install:
  - ps: |
      # Set up environment variables for all environments and build types
      $env:CI_BUILD_DIR = $env:APPVEYOR_BUILD_FOLDER
      $env:CI_PROJECT_SLUG = $env:APPVEYOR_PROJECT_SLUG
      $env:CI_REPO_NAME = $env:APPVEYOR_REPO_NAME
      if ($env:APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME) {
        $env:CI_PULL_REQUEST = "true"
      }
      $env:SMING_HOME = Join-Path $env:CI_BUILD_DIR "Sming"
      Tools/ci/setenv.ps1

  - cmd: |
      Tools\ci\install.cmd %INSTALL_OPTS%

  - sh: |
      . Tools/ci/install.sh $INSTALL_OPTS


before_build:
  - sh: |
      # Check if we could run static code analysis
      export CHECK_SCA=0
      if [[ $APPVEYOR_REPO_TAG_NAME != "" || ( $APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED == *"[scan:coverity]"*  && $CI_PULL_REQUEST == "" ) ]]; then
        export CHECK_SCA=1
      fi

build_script:
  - cmd: Tools\ci\build.cmd
  - sh: Tools/ci/build.sh

after_build:
  - ps: |
       if ($env:SMING_ARCH -eq "Host") {
          $docFile = "sming-docs.zip"
          Compress-Archive -Path $env:CI_BUILD_DIR/docs/build/html -DestinationPath $docFile
          Push-AppveyorArtifact $docFile
       }


deploy_script:
  - sh: |
      if [[ $APPVEYOR_REPO_TAG_NAME != "" && $APPVEYOR_BUILD_WORKER_IMAGE == "Ubuntu2004" && $SMING_ARCH == "Host" ]]; then
        Tools/ci/deploy.sh $APPVEYOR_REPO_TAG_NAME
      fi
